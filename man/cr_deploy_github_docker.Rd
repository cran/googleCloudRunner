% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deploy-buildtriggers.R
\name{cr_deploy_github_docker}
\alias{cr_deploy_github_docker}
\title{Deploy Docker build from a GitHub repo (Experimental)}
\usage{
cr_deploy_github_docker(
  x,
  image = x,
  branch = ".*",
  image_tag = "$SHORT_SHA",
  dockerfile_location = ".",
  github_tag = NULL,
  timeout = 600L,
  projectId = cr_project_get()
)
}
\arguments{
\item{x}{The GitHub repo e.g. \code{MarkEdmondson1234/googleCloudRunner}}

\item{image}{The name of the image you want to build}

\item{branch}{A regex of the GitHub branches that will trigger a build}

\item{image_tag}{What to tag the build docker image}

\item{dockerfile_location}{Where the Dockerfile sits within the GitHub repo}

\item{github_tag}{Regexes matching what tags to build. If not NULL then argument branch will be ignored}

\item{timeout}{timeout for the Docker build}

\item{projectId}{The project to build under}
}
\description{
This helps the common use case of building a Dockerfile based on the contents of a GitHub repo, and sets up a build trigger so it will build on every commit.
}
\details{
Build trigger API is experimental so this function is in development.
}
\seealso{
\link{cr_deploy_docker} which lets you build Dockerfiles for more generic use cases

Other Deployment functions: 
\code{\link{cr_deploy_docker}()},
\code{\link{cr_deploy_git_html}()},
\code{\link{cr_deploy_pkgdown}()},
\code{\link{cr_deploy_run}()},
\code{\link{cr_deploy_r}()}
}
\concept{Deployment functions}
